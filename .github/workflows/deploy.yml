name: Build and Deploy

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: shop-fe
  CONTAINER_NAME: shop-fe
  SERVER_DEPLOY_PATH: /home/deploy # 服务器部署目录

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 代码检出
      - name: Checkout code
        uses: actions/checkout@v4

      # Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # 安装pnpm
      - name: Install dependencies
        run: npm install -f

      # 项目构建
      - name: Build project
        run: npm run build

      # Docker 镜像构建
      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .

      # 保存镜像为 tar 文件
      - name: Save Docker image
        run: |
          docker save -o image.tar $IMAGE_NAME:latest

      # 传输镜像到服务器
      - name: Transfer image to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT || 22 }}
          source: 'image.tar'
          target: ${{ env.SERVER_DEPLOY_PATH }}

      # 服务器端部署
      - name: Remote deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT || 22 }}
          script: |
            cd ${{ env.SERVER_DEPLOY_PATH }}

            # 停止并删除旧容器
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true

            # 加载新镜像
            docker load -i image.tar

            # 启动新容器
            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              -p 80:80 \
              --restart always \
              ${{ env.IMAGE_NAME }}:latest

            # 清理临时文件
            rm -f image.tar
            echo "Deployment completed!"
